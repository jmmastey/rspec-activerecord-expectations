name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_modern:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby-version: ['3.1', '3.0']
        rails: ['6.0', '6.1', '7.0', '7.1', '8.0']
        exclude:
          - { ruby: '3.1',  rails: '8.0' }
          - { ruby: '3.0',  rails: '8.0' }

    runs-on: ${{ matrix.os }}
    name: ruby ${{ matrix.ruby-version }}, rails ${{ matrix.rails }}, ${{ matrix.os }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install Gems w/ Rails ${{ matrix.rails }}
        env:
          MATRIX_RAILS_VERSION: ${{ matrix.rails }}
        run: |
          export BUNDLE_GEMFILE="${GITHUB_WORKSPACE}/gemfiles/rails_${MATRIX_RAILS_VERSION}.gemfile"
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec rspec

  test_legacy:
    strategy:
      matrix:
        ruby-version: ['2.7', '2.6', '2.5']
        rails: ['5.0', '5.1', '5.2']

    runs-on: ubuntu-latest
    name: ruby ${{ matrix.ruby-version }}, rails ${{ matrix.rails }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install Gems w/ Rails ${{ matrix.rails }}
        env:
          MATRIX_RAILS_VERSION: ${{ matrix.rails }}
        run: |
          export BUNDLE_GEMFILE="${GITHUB_WORKSPACE}/gemfiles/rails_${MATRIX_RAILS_VERSION}.gemfile"
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec rspec

  test_alt_rubies:
    strategy:
      matrix:
        ruby-version: ['jruby', 'truffleruby']
        rails: ['6.0', '6.1'] # jruby / jdbc-sqlite3 end up tightly bound to rails 6.x

    runs-on: ubuntu-latest
    name: ${{ matrix.ruby-version }}, rails ${{ matrix.rails }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install Gems w/ Rails ${{ matrix.rails }}
        env:
          MATRIX_RAILS_VERSION: ${{ matrix.rails }}
        run: |
          export BUNDLE_GEMFILE="${GITHUB_WORKSPACE}/gemfiles/rails_${MATRIX_RAILS_VERSION}.gemfile"
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec rspec

